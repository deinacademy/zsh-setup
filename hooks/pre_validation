#!/bin/bash

before_validation(){
  local cmd_validation=""
  local cmd_previous=$(fc -ln -1 | xargs) # Get previous command from history
  local cmd_previous_alias="$(alias_for ${cmd_previous})" # Check if there's an alias for the command
  if [[ -n $cmd_previous_alias ]]; then # If there was
    cmd_previous="${cmd_previous_alias}"
  fi
  local cmd_current=$(echo $1 | xargs)

  # publish package
  if [[ -f "$config_file" ]] && ( [[ "$cmd_current" =~ ^"${package_manager} publish" ]] || [[ "${cmd_alias}" =~ ^"${package_manager} publish" ]] ); then
    cmd_validation="${package_manager} run build"
  # create branch
  elif [[ "$cmd_current" =~ ^"git checkout -b" ]] || [[ "${cmd_alias}" =~ ^"git checkout -b" ]]; then
    cmd_validation="git pull"
  elif [[ "$cmd_current" =~ ^"git switch -c" ]] || [[ "${cmd_alias}" =~ ^"git switch -c" ]]; then
    cmd_validation="git pull"
  fi

  if [[ ! -z $cmd_validation ]]; then
    if [[ "${cmd_validation}" != "${cmd_previous}" ]]; then
      ask_cancel_before $cmd_validation # show cancel alert if is not the previous
    fi
  else
    quit="n"
  fi
}

pre_cmd_validation() {
  [[ $# -eq 0 ]] && return # If there's no input, return. Else...

  before_validation "$@"
}

add-zsh-hook preexec pre_cmd_validation       # Adds the pre hook
# add-zsh-hook -d preexec pre_cmd_validation  # Remove it for this hook
